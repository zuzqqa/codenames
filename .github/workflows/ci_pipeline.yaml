name: 🚀 Codenames CI/CD Pipeline

on:
  push:
    branches:
      - '*' # Trigger pipeline on pushes 
  pull_request:
    branches:
      - main

jobs:
  backend:
    name: 🏗️ Build Backend
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner
    services:
      mongodb:
        image: mongo  # Use the official MongoDB image
        ports:
          - 27017:27017  # Map MongoDB's default port

    steps:
      - name: 📥 Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure the entire history is fetched for versioning

      - name: 🔍 List tags in the repository
        run: |
          git fetch --tags
          git tag           

      - name: 🏷️ Get last tag and set version
        run: |
          VERSION=$(git describe --tags --abbrev=0)
          TAG="${VERSION}-alpha" 
          echo "VERSION=$TAG" >> $GITHUB_ENV  

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'  # Specify Java 17
          distribution: 'temurin'  # Use the Temurin JDK distribution
          cache: maven  # Enable caching for Maven dependencies
    
      - name: 🌍 Set environment variables
        run: |
          echo "SPRING_PROFILES_ACTIVE=dev" >> $GITHUB_ENV
          echo "SECRET=${{ secrets.SECRET }}" >> $GITHUB_ENV
          echo "SPRING_MAIL_USERNAME=${{ secrets.SPRING_MAIL_USERNAME }}" >> $GITHUB_ENV
          echo "SPRING_MAIL_PASSWORD=${{ secrets.SPRING_MAIL_PASSWORD }}" >> $GITHUB_ENV
          echo "MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }}" >> $GITHUB_ENV
          echo "MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}" >> $GITHUB_ENV
          echo "SPRING_DATA_MONGODB_URI=mongodb://localhost:27017" >> $GITHUB_ENV

      - name: 🔨 Build with Maven
        run: |
          cd codenames-backend
          mvn clean install -DskipTests
      
      - name: 🔨 Run Integration Tests with Maven
        run: |
          cd codenames-backend
          mvn test -Dtest="**/integrationTests/*.java"
      
      - name: 🔨 Run Unit Tests with Maven
        run: |
          cd codenames-backend
          mvn test -Dtest="**/unitTests/*.java"

  frontend: 
    name: 🎨 Build Frontend
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      - name: 📥 Checkout repo 
        uses: actions/checkout@v4  # Checkout the repository code

      - name: 🛠️ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20  # Use Node.js v20
          cache: 'npm'  # Enable npm caching
          cache-dependency-path: codenames-frontend/package-lock.json  # Cache dependencies based on package-lock.json

      - name: 📦 Install dependencies
        run: |
            cd codenames-frontend
            npm install
      
      - name: 🏗️ Build frontend
        run: |
            cd codenames-frontend
            npm run build
