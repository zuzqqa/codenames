name: ðŸš€ Deploy on Google Cloud Run

on:
  push:
    branches: [main]

env:
  BACKEND_ENV_YAML: ${{ secrets.BACKEND_ENV_YAML }}

permissions:
  contents: 'read'
  id-token: 'write'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: 'projects/524815217558/locations/global/workloadIdentityPools/github/providers/github-actions'
        service_account: 'github-deployer@codenames-471620.iam.gserviceaccount.com'
  
    - name: 'Set up gcloud'
      uses: 'google-github-actions/setup-gcloud@v2'
      
      # After "actions/checkout@v3" and auth/setup-gcloud
    - name: 'Debug: show workspace and gcloud'
      run: |
        pwd
        echo "GITHUB_WORKSPACE=${GITHUB_WORKSPACE}"
        gcloud --version
    
    # ---- Backend checks ----
    - name: 'Debug: verify backend Dockerfile is present'
      run: |
        echo "Listing repo root:"
        ls -la
        echo "Listing ./codenames-backend:"
        ls -la ./codenames-backend || true
        echo "Find any Dockerfile under codenames-backend:"
        find ./codenames-backend -maxdepth 2 -type f -iname 'Dockerfile*' -printf '%p\n' || true
        echo "If present, show first lines:"
        test -f ./codenames-backend/Dockerfile && head -n 50 ./codenames-backend/Dockerfile || echo "No standard Dockerfile"
        echo "Show .dockerignore if exists:"
        test -f ./.dockerignore && { echo "Root .dockerignore:"; cat ./.dockerignore; } || echo "No root .dockerignore"
        test -f ./codenames-backend/.dockerignore && { echo "Service .dockerignore:"; cat ./codenames-backend/.dockerignore; } || echo "No service .dockerignore"
        echo "Fail job if Dockerfile missing:"
        test -f ./codenames-backend/Dockerfile || { echo "::error ::Missing ./codenames-backend/Dockerfile"; exit 1; }
    
    - name: 'Debug: try a local docker build (no push)'
      run: |
        docker version
        docker build -f ./codenames-backend/Dockerfile ./codenames-backend -t backend:debug --no-cache --progress=plain
    
    # Optional: see what Cloud Build will upload as the source tarball
    - name: 'Debug: inspect source tarball content (what gcloud uploads)'
      run: |
        tar -czf /tmp/backend-src.tgz -C ./codenames-backend .
        echo "Top of source tar:"
        tar -tzf /tmp/backend-src.tgz | head -n 200 | sed 's/^/  /'
        echo "Ensure Dockerfile is in tar:"
        tar -tzf /tmp/backend-src.tgz | grep -i '^Dockerfile$' || { echo "::warning ::Dockerfile not found in tar"; }
    
    # ---- Repeat for the other services if helpful ----
    - name: 'Debug: verify socket-io Dockerfile is present'
      run: |
        ls -la ./codenames-socket-io-server || true
        find ./codenames-socket-io-server -maxdepth 2 -type f -iname 'Dockerfile*' -printf '%p\n' || true
    
    - name: 'Debug: verify peerserver Dockerfile is present'
      run: |
        ls -la ./codenames-peerserver || true
        find ./codenames-peerserver -maxdepth 2 -type f -iname 'Dockerfile*' -printf '%p\n' || true

    - name: 'Configure gcloud to impersonate service account'
      run: |
        gcloud config set auth/impersonate_service_account cr-runtime@codenames-471620.iam.gserviceaccount.com
    
    - name: 'Create env.yaml'
      run: echo "$BACKEND_ENV_YAML" > env.yaml

    - name: 'Deploy codenames-backend to Google Cloud Run'
      run: |
        gcloud builds submit ./codenames-backend 
          --tag europe-central2-docker.pkg.dev/codenames-471620/codenames/codenames-backend \
          --service-account=projects/codenames-471620/serviceAccounts/cr-runtime@codenames-471620.iam.gserviceaccount.com
          
        gcloud run deploy codenames-backend \
          --image europe-central2-docker.pkg.dev/codenames-471620/codenames/codenames-backend \
          --region europe-central2 \
          --platform managed \
          --service-account projects/codenames-471620/serviceAccounts/cr-runtime@codenames-471620.iam.gserviceaccount.com \
          --allow-unauthenticated \
          --env-vars-file env.yaml

    - name: 'Remove env.yaml'
      run: rm env.yaml

    - name: 'Build Docker image for frontend'
      run: |
        docker build -f ./codenames-frontend/Dockerfile.prod ./codenames-frontend \
          -t europe-central2-docker.pkg.dev/codenames-471620/codenames/codenames-frontend:latest \
          --build-arg VITE_BACKEND_API_URL=${{ secrets.VITE_BACKEND_API_URL }} \
          --build-arg VITE_SOCKET_IO_SERVER=${{ secrets.VITE_SOCKET_IO_SERVER }} \
          --build-arg VITE_PEERSERVER=${{ secrets.VITE_PEERSERVER }} \
          --build-arg VITE_SECURE_COOKIES=${{ secrets.VITE_SECURE_COOKIES }} \
          --build-arg VITE_FRONTEND_URL=${{ secrets.VITE_FRONTEND_URL }}
    
    - name: 'Push Docker image to GCR'
      run: docker push europe-central2-docker.pkg.dev/codenames-471620/codenames/codenames-frontend:latest

    - name: 'Deploy codenames-frontend to Google Cloud Run'
      run: |
        gcloud run deploy codenames-frontend \
          --image europe-central2-docker.pkg.dev/codenames-471620/codenames/codenames-frontend:latest \
          --region europe-central2 \
          --platform managed \
          --service-account projects/codenames-471620/serviceAccounts/cr-runtime@codenames-471620.iam.gserviceaccount.com \
          --allow-unauthenticated
  
    - name: 'Deploy codenames-socket-io-server to Google Cloud Run'
      run: |
        gcloud builds submit ./codenames-socket-io-server 
          --tag europe-central2-docker.pkg.dev/codenames-471620/codenames/codenames-socket-io-server \
          --service-account=projects/codenames-471620/serviceAccounts/cr-runtime@codenames-471620.iam.gserviceaccount.com
        
        gcloud run deploy codenames-socket-io-server \
          --image europe-central2-docker.pkg.dev/codenames-471620/codenames/codenames-socket-io-server \
          --region europe-central2 \
          --platform managed \
          --service-account projects/codenames-471620/serviceAccounts/cr-runtime@codenames-471620.iam.gserviceaccount.com \          
          --allow-unauthenticated

    - name: 'Deploy codenames-peerserver to Google Cloud Run'
      run: |
        gcloud builds submit ./codenames-peerserver 
          --tag europe-central2-docker.pkg.dev/codenames-471620/codenames/codenames-peerserver  \
          --service-account=projects/codenames-471620/serviceAccounts/cr-runtime@codenames-471620.iam.gserviceaccount.com
          
        gcloud run deploy codenames-peerserver \
          --image europe-central2-docker.pkg.dev/codenames-471620/codenames/codenames-peerserver \
          --region europe-central2 \
          --platform managed \
          --service-account projects/codenames-471620/serviceAccounts/cr-runtime@codenames-471620.iam.gserviceaccount.com \
          --allow-unauthenticated
